To adhere to the Open/Closed Principle (OCP), we'll design a payment system using inheritance and abstraction. We'll create an abstract base class
PaymentMethod (or interface) that defines a method for processing payments. Then, we'll create concrete classes for different types of payment 
methods that extend the base class and provide specific implementations for processing payments.

The PaymentMethod abstract base class defines a method ProcessPayment for processing payments.
Concrete classes CreditCardPayment, DebitCardPayment, and PayPalPayment inherit from PaymentMethod and provide specific implementations for 
processing payments based on different payment methods.
We can easily extend the payment system by creating new classes that inherit from PaymentMethod and provide implementations 
for additional types of payment methods (e.g., bank transfer, cryptocurrency).